language: generic

os:
  - linux
  - osx

dist: trusty
sudo: required
osx_image: xcode8.3

env:
  global:
  - LC_CTYPE=en_US.UTF-8
  - LANG=en_US.UTF-8
  - WORKSPACE=Lioness.xcworkspace
  - IOS_FRAMEWORK_SCHEME="Lioness iOS [Double]"
  - MACOS_FRAMEWORK_SCHEME="Lioness macOS Release [Double]"
  - EXAMPLE_SCHEME="macOS Example"

  - JOB=Linux
  - JOB=OSX DESTINATION="OS=10.3.1,name=iPhone 7 Plus"     SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="NO" BUILD_EXAMPLE="NO"  CODE_COV="NO"
  - JOB=OSX DESTINATION="OS=9.0,name=iPhone 6"           SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="NO" BUILD_EXAMPLE="NO"  CODE_COV="NO"
  - JOB=OSX DESTINATION="arch=x86_64"                    SCHEME="$MACOS_FRAMEWORK_SCHEME"   RUN_TESTS="YES" BUILD_EXAMPLE="NO"  CODE_COV="YES"

matrix:
  exclude:
    - os: linux
      env: JOB=OSX
    - os: osx
      env: JOB=Linux

before_install:
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    DIR="$(pwd)";
    cd ..;
    export SWIFT_VERSION=swift-3.1.1-RELEASE;
    wget https://swift.org/builds/development/ubuntu1404/$SWIFT_VERSION/$SWIFT_VERSION-ubuntu14.04.tar.gz;
    tar xzf $SWIFT_VERSION-ubuntu14.04.tar.gz;
    export PATH="${PWD}/${SWIFT_VERSION}-ubuntu14.04/usr/bin:${PATH}";
    cd "$DIR";
  fi


script: 

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then

    set -o pipefail;
    xcodebuild -version;
    xcodebuild -showsdks;

    if [ $RUN_TESTS == "YES" ]; then
      travis_retry xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty;
    else
      travis_retry xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO build | xcpretty;
    fi

    if [ $RUN_TESTS == "YES" ]; then
      travis_retry xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty;
    else
      travis_retry xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO build | xcpretty;
    fi

    if [ $BUILD_EXAMPLE == "YES" ]; then
      travis_retry xcodebuild -workspace "$WORKSPACE" -scheme "$EXAMPLE_SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO build | xcpretty;
    fi

    if [ $CODE_COV == "YES" ]; then
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=YES ENABLE_TESTABILITY=YES -enableCodeCoverage YES test;
    fi

    fi

  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    swift build;
    fi


after_success:
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    - bash <(curl -s https://codecov.io/bash)
  fi


